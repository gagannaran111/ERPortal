@model ERPortal.Core.ViewModels.DGHERProposalViewModel
@{
    ViewBag.Title = "AppRecToDGH";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .nav-tabs .nav-link.active, .nav-tabs .nav-item.show .nav-link {
        background-color: #bcf31185;
        color: darkblue;
    }

    #ERProposalTab label {
        font-weight: 700;
    }
</style>

@Html.HiddenFor(model => model.ERApplications.ERScreeningDetailId)
@Html.HiddenFor(model => model.ERApplications.AppId)
@Html.HiddenFor(model => model.ERApplications.Id)
@Html.HiddenFor(model => model.ERApplications.DGHFileAttachment)
@Html.HiddenFor(model => model.ERApplications.DGHFileAttachmentForPilot)

<div class="container-fluid">

    <div class="row">
        <!-- Tab panes -->
        <div class="tab-content shadow-lg col-lg-12 ">
            <ul class="nav nav-tabs bg-gradient-light mt-3">
                <li class="nav-item">
                    <a class="nav-link active" data-toggle="tab" href="#ERProposalTab">ER Screening Report</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link commenttablink" data-toggle="tab" href="#CommentTab">Summary</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link Querycommenttablink" data-toggle="tab" href="#QueryCommentTab">Query</a>
                </li>
            </ul>

            <div id="ERProposalTab" class="container-fluid tab-pane active">
                <div class="row">
                    <div class="col-md-12 mt-4">

                        @Html.AntiForgeryToken()

                        <div class="card border-primary mb-3">
                            <div class="card-header bg-gradient-primary text-white">
                                <div class="row">
                                    <div class="col-lg-6"><h5><i class="fas fa-file-alt"></i> ER Screening Report Approval For DGH</h5></div>
                                    <div class="col-lg-6 ">
                                        <a href="#" class="btn btn-sm btn-outline-light float-right ml-1 GeneratePDF" id="printapp"><i class="fas fa-print"></i> Print</a>
                                        <a href="#" class="btn btn-sm btn-outline-light float-right ml-1 ForwardApp d-none" id="forwardapp" data-toggle="modal" data-target="#CommentModal" data-page="ForwardApplication" data-title="Application Forward"><i class="fas fa-forward"></i> Forward/Approved</a>
                                        <a href="#" class="btn btn-sm btn-outline-light float-right ml-1 QueryComment " id="QueryComment" data-toggle="modal" data-target="#CommentModal" data-page="QueryCommentRaised" data-title="Query Raised"><i class="fas fa-question"></i> Query</a>
                                        <a href="#" class="btn btn-sm btn-outline-light float-right ml-1 GrantApp" id="grantapp" data-toggle="modal" data-target="#CommentModal" data-page="Comment" data-title="Application Grant"><i class="fas fa-check"></i> Grant</a>
                                    </div>
                                </div>
                            </div>
                            <div class="card-body ml-lg-5">
                                <fieldset id="disabledForm" disabled>
                                    <div class="form-horizontal">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.ERApplications.Organisation, htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                                            <div class="col-sm-6 d-flex align-items-center">
                                                @Html.DisplayFor(model => model.ERApplications.Organisation.Name, new { htmlAttributes = new { @class = "form-control" } })
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.ERApplications.FieldType, htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                                            <div class="col-sm-6 d-flex align-items-center">
                                                @Html.DisplayFor(model => model.ERApplications.FieldType.Type, new { @class = "form-control" })

                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.ERApplications.FieldName, htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                                            <div class="col-sm-6 d-flex align-items-center">
                                                @Html.DisplayFor(model => model.ERApplications.FieldName, new { htmlAttributes = new { @class = "form-control" } })

                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.ERApplications.HydrocarbonType, htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                                            <div class="col-sm-6 d-flex align-items-center">
                                                @Html.DisplayFor(model => model.ERApplications.HydrocarbonType, "Choose...", new { @class = "form-control" })

                                            </div>
                                        </div>

                                        <div class="form-group row" id="uhcProdnMethodDiv" style="display: none">
                                            @Html.LabelFor(model => model.ERApplications.UHCProductionMethod, htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                                            <div class="col-sm-6 d-flex align-items-center">
                                                @Html.DisplayFor(model => model.ERApplications.UHCProductionMethodId, new { @class = "form-control" })

                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.ERApplications.DateOfDiscovery, htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                                            <div class="col-sm-6 d-flex align-items-center">
                                                @Html.DisplayFor(model => model.ERApplications.DateOfDiscovery, new { htmlAttributes = new { @class = "form-control datetimetext", @type = "text" } })

                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.ERApplications.ImplementaionType, htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                                            <div class="col-sm-6 d-flex align-items-center">
                                                @Html.DisplayFor(model => model.ERApplications.ImplementaionType, new { @class = "form-control" })

                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.ERApplications.DateOfInitialCommercialProduction, htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                                            <div class="col-sm-6 d-flex align-items-center">
                                                @Html.DisplayFor(model => model.ERApplications.DateOfInitialCommercialProduction, new { htmlAttributes = new { @class = "form-control ", @type = "text" } })

                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.ERApplications.PresentlyUnderProduction, htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                                            <div class="col-sm-6 d-flex align-items-center">
                                                <div class="form-check form-check-inline">
                                                    @Html.DisplayFor(model => model.ERApplications.PresentlyUnderProduction, new { @class = "form-check-input" })
                                                </div>
                                            </div>
                                        </div>
                                        @if (Model.ERApplications.PresentlyUnderProduction == false)
                                        {
                                            <div class="form-group row" id="DateOfLastCommercialProductionDiv">
                                                @Html.LabelFor(model => model.ERApplications.DateOfLastCommercialProduction, htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                                                <div class="col-sm-6 d-flex align-items-center">
                                                    @Html.DisplayFor(model => model.ERApplications.DateOfLastCommercialProduction, new { htmlAttributes = new { @class = "form-control", @type = "text" } })

                                                </div>
                                            </div>
                                        }
                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.ERApplications.ERScreeningDetail.ERScreeningInstitute.InstituteName, htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                                            <div class="col-sm-6 d-flex align-items-center">
                                                <div class="form-check form-check-inline">
                                                    @Html.DisplayFor(model => model.ERApplications.ERScreeningDetail.ERScreeningInstitute.InstituteName, new { @class = "form-check-input" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.ERApplications.ERScreeningDetail.FirstOrderScreening, htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                                            <div class="col-sm-6 d-flex align-items-center">
                                                <div class="form-check form-check-inline">
                                                    @Html.DisplayFor(model => model.ERApplications.ERScreeningDetail.FirstOrderScreening, new { @class = "form-check-input" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.ERApplications.ERScreeningDetail.SecondOrderScreening, htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                                            <div class="col-sm-6 d-flex align-items-center">
                                                <div class="form-check form-check-inline">
                                                    @Html.DisplayFor(model => model.ERApplications.ERScreeningDetail.SecondOrderScreening, new { @class = "form-check-input" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.ERApplications.ERScreeningDetail.ThirdOrderScreening, htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                                            <div class="col-sm-6 d-flex align-items-center">
                                                <div class="form-check form-check-inline">
                                                    @Html.DisplayFor(model => model.ERApplications.ERScreeningDetail.ThirdOrderScreening, new { @class = "form-check-input" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.ERApplications.FieldOIIP, "FieldOIIP (MMbbl)", htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                                            <div class="col-sm-6 d-flex align-items-center">
                                                <div class="input-group mb-3">
                                                    @Html.DisplayFor(model => model.ERApplications.FieldOIIP, new { htmlAttributes = new { @class = "form-control", aria_describedby = "basic-addon1" } })
                                                </div>


                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.ERApplications.FieldGIIP, "FieldGIIP (TCF)", htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                                            <div class="col-sm-6 d-flex align-items-center">
                                                <div class="input-group mb-3">
                                                    @Html.DisplayFor(model => model.ERApplications.FieldGIIP, new { htmlAttributes = new { @class = "form-control", aria_describedby = "basic-addon2" } })

                                                </div>

                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.ERApplications.TechnicallyCompatible, htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                                            <div class="col-sm-6 d-flex align-items-center">
                                                <div class="form-check form-check-inline">
                                                    @Html.DisplayFor(model => model.ERApplications.TechnicallyCompatible, new { @class = "form-check-input" })

                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.ERApplications.EconomicViability, htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                                            <div class="col-sm-6 d-flex align-items-center">
                                                <div class="form-check form-check-inline">
                                                    @Html.DisplayFor(model => model.ERApplications.EconomicViability, new { @class = "form-check-input" })

                                                </div>

                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            @Html.LabelFor(model => model.ERApplications.AdditonalRemarks, htmlAttributes: new { @class = "col-sm-5 col-form-label" })
                                            <div class="col-sm-6 d-flex align-items-center">
                                                @Html.DisplayFor(model => model.ERApplications.AdditonalRemarks, new { htmlAttributes = new { @class = "form-control" } })

                                            </div>
                                        </div>
                                        <div id="DetailViewFile" class="form-group row">
                                            <div class="pl-2 border-primary col-sm-12" style="border:dashed">
                                                <p class="text-info font-weight-bold">ER Screening Documents</p>
                                                @Html.HiddenFor(model => model.ERApplications.ERScreeningDetail.ReportDocumentPath)
                                                @if (ViewBag.ERFiles.Count > 0)
                                                {
                                                    foreach (var x in ViewBag.ERFiles)
                                                    {
                                                        <div class='badge badge-warning mr-2 mb-2'>
                                                            <a class='text-dark' href="@Url.Content("~/Content/UploadedFiles/" + x.FileName)" target='_blank'>@x.FileName</a>
                                                        </div>
                                                    }
                                                }
                                                else
                                                {
                                                    <h6 class="text-danger font-weight-bold">No File Found</h6>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>


                    </div>
                </div>

            </div>

            <div id="CommentTab" class="container-fluid tab-pane fade">
                <br />

                <div class="row form-group">
                    <div class="col-xs-12 col-md-offset-2 col-md-12 col-lg-12 col-lg-offset-2">
                        <div class="card  border-info">
                            <div class="card-header bg-gradient-info text-light">
                                <h6><i class="fas fa-comment-alt "></i> Application Summary<span class="float-right">Application Id : @Model.ERApplications.AppId</span></h6>
                            </div>
                            <div class="card-body body-panel">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="QueryCommentTab" class="container-fluid tab-pane fade">
                <br />

                <div class="row form-group">
                    <div class="col-xs-12 col-md-offset-2 col-md-12 col-lg-12 col-lg-offset-2">
                        <div class="card  border-warning">
                            <div class="card-header bg-gradient-warning text-danger">
                                <h6><i class="fas fa-comment-alt "></i> Query Summary<span class="float-right">Application Id : @Model.ERApplications.AppId</span></h6>
                            </div>
                            <div class="card-body body-panel">
                            </div>
                            @*<div class="card-footer">
                                    <div class="container">
                                        <div class="row">
                                            <div class="col-lg-12 nopadding">
                                                <textarea id="demo-editor-bootstrap"> </textarea>
                                            </div>
                                            <div class="col-lg-12">
                                                <button class="btn btn-success mt-2"><i class="fas fa-forward"></i> Send</button>
                                                <button class="btn btn-success mt-2"><i class="fas fa-reply"></i> Reply</button>
                                            </div>
                                        </div>

                                    </div>

                                </div>*@
                        </div>
                    </div>
                </div>
            </div>


        </div>

    </div>
</div>



<script>


    $(document).ready(function () {

          $('.btnCommentView').click(function () {
            $('a[href="#CommentTab"]').click();
          });
         $('.tblComment').DataTable(
            {
               // scrollY: '50vh',
                scrollCollapse: true,
                paging: true,
               lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],

                //processing: true,
                // deferLoading: 5
             });

        BtnForwardCheckShowHideStatus("btnForward");
    });
    $(document).on('click', '.ForwardApp', function () {
        ShowCommentModal("@Model.ERApplications.Id", $(this).attr('data-title'), "@Url.Action("AjaxAdd", "Comment")",$(this).attr('data-page'),null);

    });
     $(document).on('click', '.QueryComment', function () {
         ShowCommentModal("@Model.ERApplications.Id", $(this).attr('data-title'), "@Url.Action("AjaxAdd", "Comment")",$(this).attr('data-page'),null);

     });
     $(document).on('click', '.GrantApp', function () {
        ShowCommentModal("@Model.ERApplications.Id",$(this).attr('data-title'),"@Url.Action("AjaxAdd", "Comment")",$(this).attr('data-page'),null);
     });



    // Forward Application
    $(document).on('click', '.commenttablink', function () {

         $.ajax({
                url: "@Url.Action("ApplicationSummary", "Comment", new { appid = Model.ERApplications.Id })",
             success: function (result) {

                 console.log(result);
                 if (result.length == 0) {
                       $("#CommentTab .body-panel").html('<h3 class="text-danger ">Data Not Found</h3>');
                 }
                 else {
                     var dd = "";
                     var statuscheck = "";

                     $.each(result, function (index, element) {
                         var files = "";


                         $.each(result[index].Files, function (i, e) {

                             files += '<a class="badge badge-info mr-2" href="' + result[index].Files[i].FilePath + '" target="blank"><i class="fas fa-file-download"></i> ' + result[index].Files[i].FileName + '</a>';
                         });

                         if (result[index].FileStatus == 0) {
                             statuscheck = "Application Forward To " + result[index].recivername + " by " + result[index].Sendername;
                         }
                         else if (result[index].FileStatus == 1) {
                             statuscheck = "Application Recommended by " + result[index].Sendername;
                         }
                         else {
                             statuscheck = "";
                         }
                         dd += ' <li class="left clearfix "><span class="chat_img pull-left">' +
                             '	<span class="chat_img"> <img src="../Content/img/user-profile.png" alt="User" style="width:50px"> </span>' +
                             '</span><div class="chat-body clearfix"><div class="header"><strong class="text-danger">' + statuscheck + '</strong> <small class="pull-right text-muted">' +
                             '<i class="fas fa-clock"></i> ' + ToChangeDateFormate(result[index].CreatedAt) + '</small></div>' +
                             '<p>' + result[index].comments + '</p><div class="mb-2"><p>' + files + '</p ></div></div ></li >';
                     });
                     $("#CommentTab .body-panel").html('<ul class="chat">' + dd + '</ul>');
                 }
             },
             error: function () {

                 alertModal("Something Went Wrong. Try Again Later");
             },
             fail: function (xhr, textStatus, errorThrown) {

                 alertModal("Something Went Wrong. Try Again Later");
             }
         });

    });
    $(document).on('change', '#ForwardApplication_FileStatus', function () {
        var value = $('#ForwardApplication_FileStatus option:selected').val();
        if (value == "1" || value == "2") {
            $('.ReciverIdSelectList').addClass('d-none');
        }

        else {
             $('.ReciverIdSelectList').removeClass('d-none');
        }

    })
     function BtnForwardCheckShowHideStatus(typebtn) {
        var sendData = { btnType: typebtn, appid: "@Model.ERApplications.Id" };
        $.ajax({
            url: "@Url.Action("BtnCheckStatus", "Comment")",
            type: 'POST',
            data: sendData,
            async: false,
            success: function (result) {
                switch (result) {
                    case "Show":
                        $('.ForwardApp').removeClass('d-none');
                        break;
                    case "Hide":
                        $('.ForwardApp').addClass('d-none');
                        break;
                    default:  alertModal("Something Went Wrong. Try Again Later");
                }
            },
            error: function () {
                alertModal("Something Went Wrong. Try Again Later");
            },
            fail: function (xhr, textStatus, errorThrown) {
                alertModal("Something Went Wrong. Try Again Later");
            }
        });
    }

    // Query Comment

    $(document).on('click', '.Querycommenttablink', function () {

          $.ajax({
              url: "@Url.Action("QueryCommentSummary", "Comment", new { appid = Model.ERApplications.Id })",
              type:'POST',
              success: function (result) {
                   @{ string[] arr = Session["UserData"] as string[]; }
                  console.log(result);
                  if (result.length == 0) {
                      $("#QueryCommentTab .body-panel").html('<h3 class="text-danger ">Data Not Found</h3>');
                  }
                  else {
                      //editor("#demo-editor-bootstrap");

                      //(parseInt(index) + counter) +
                      var dd = "";
                      var userid = "@arr[0]";
                      var statuscheck = "";
                      var counter = 1;
                      var subject = "";
                      var replybtn = "";
                      var resolvedbtn = "";                     
                      $.each(result, function (index, element) {
                          if (element[0].Subject != subject) {
                              subject = element[0].Subject;                              
                              dd += "<div class=''><div class='alert alert-success h5'>Query : " + counter + " Subject : " + subject + "</div>";
                              counter++;
                          }
                          dd += "<div class='alert alert-light border border-danger'><p class='h5 float-right'>Query Between " + element[0].Sender.SenderName +" and "+ element[0].Reciver.ReciverName+"</p><hr/>";
                          $.each(result[index], function (i, f) {
                              var files = "";

                              $.each(f.Files, function (j, e) {
                                  files += '<a class="badge badge-success mr-2" href="' + e.FilePath + '" target="blank"><i class="fas fa-file-download"></i> ' + e.FileName + '</a>';
                              });
                              if (f.Status == "Query Rasied") {
                                  statuscheck = "Query Rasied To " + f.Reciver.ReciverName + " by " + f.Sender.SenderName;
                                                                
                              }
                              else if (f.Status == "Query Reply") {
                                  statuscheck = "Query Reply To " + f.Reciver.ReciverName + " by " + f.Sender.SenderName;
                              }
                              else if (f.Status == "Query Forward") {
                                  statuscheck = "Query Forward To " + f.Reciver.ReciverName + " by " + f.Sender.SenderName;
                              }
                              else {
                                  statuscheck = "";
                              }
                            
                              
                              if (f.Reciver.ReciverId == userid || f.Sender.SenderId == userid) {
                                  replybtn = '<button class="btn btn-sm btn-primary ml-2 BtnQueryReply" data-page="QueryCommentReply" data-query-parentid="' + f.QueryParentId + '" data-query-id="' + f.Id +
                                      '" data-toggle="modal" data-target="#CommentModal" data-title="Query Reply"><i class="fas fa-reply"></i> Reply</button>';
                              }
                              else {
                                  replybtn = "";
                              }
                                       
                                     
                                   dd += ' <li class="left clearfix "><span class="chat_img pull-left">' +
                                  '	<span class="chat_img"> <img src="../Content/img/user-profile.png" alt="User" style="width:50px"> </span>' +
                                  '</span><div class="chat-body clearfix"><div class="header"><strong class="text-danger h5">' + statuscheck + '</strong> <small class="pull-right text-muted">' +
                                  '<i class="fas fa-clock"></i> ' + ToChangeDateFormate(f.CreatedAt) + '</small></div><div><p><b>Subject :</b> ' + f.Subject + '</p></div>' +
                                  '<p><b>Comments :</b> ' + f.Comments + '</p><div class="mb-2"><p>' + files + '</p ></div>' +
                                  '<div class="float-right" > <button class="btn btn-sm btn-success BtnQueryForward" data-page="QueryCommentForward" data-query-parentid="' + f.QueryParentId + '" data-query-id="' + f.Id +
                                  '" data-toggle="modal" data-target="#CommentModal" data-title="Query Forward"><i class="fas fa-forward"></i> Forward</button>' +replybtn+
                                  '</div ></div ></li > ';

                              if (f.Sender.SenderId == userid && f.Status == "Query Rasied") {
                                  resolvedbtn = '<div class="alert alert-light"><button class="btn btn-sm btn-info ml-2 BtnQueryResolved" data-page="QueryCommentResolved" data-query-parentid="' + f.QueryParentId + '" data-query-id="' + f.Id +
                                      '" data-toggle="modal" data-target="#CommentModal" data-title="Query Resolved"><i class="fas fa-check"></i> Mark As Resolved</button></div>';
                              }
                              else {
                                  resolvedbtn = "";
                              }
                          });
                          dd += resolvedbtn + "</div></div>";                         
                      });

                          //  var subject = "<div class='col alert alert-info'><h5 class=''>Subject : " + result[1].Subject + "</h4></div>"
                          $("#QueryCommentTab .body-panel").html('<ul class="chat">' + dd + '</ul>');
                      }
                  },
             error: function () {

                      alertModal("Something Went Wrong. Try Again Later");
                  },
             fail: function (xhr, textStatus, errorThrown) {

                      alertModal("Something Went Wrong. Try Again Later");
                  }
              });

    });

    $(document).on('click', '.BtnQueryForward', function () {
        ShowCommentModal("@Model.ERApplications.Id", $(this).attr('data-title'), "@Url.Action("AjaxAdd","Comment")", $(this).attr('data-page'), $(this).attr('data-query-id'));

    });

    $(document).on('click', '.BtnQueryReply', function () {
         ShowCommentModal("@Model.ERApplications.Id", $(this).attr('data-title'), "@Url.Action("AjaxAdd","Comment")",$(this).attr('data-page'),$(this).attr('data-query-id'));


    });
    $(document).on('click', '.BtnQueryResolved', function () {
          ShowCommentModal("@Model.ERApplications.Id", $(this).attr('data-title'), "@Url.Action("AjaxAdd","Comment")",$(this).attr('data-page'),$(this).attr('data-query-id'));
    });


</script>