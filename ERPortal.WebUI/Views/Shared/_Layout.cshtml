<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="DGH ER Management Portal">
    <meta name="author" content="Siddhartha, DGH IT-Team">
    <meta name="generator" content="Jekyll v3.8.5">
    <link rel="icon" href="~/Content/img/favicon.ico">

    <title>@ViewBag.Title | DGH ERPortal</title>

    <!-- Bootstrap core CSS -->
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/CustomFiles/excludechar.js"></script>
    @Scripts.Render("~/bundles/popper")
    @*<script>window.jQuery || document.write('<script src="/docs/4.3/assets/js/vendor/jquery-slim.min.js"><\/script>')</script>*@
    @Scripts.Render("~/bundles/bootstrap")

    @RenderSection("css", required: false)
    <script src="~/Scripts/CustomFiles/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Scripts/CustomFiles/printThis.js"></script>

    <link href="~/Content/fontawesome-all.min.css" rel="stylesheet" />
    <script src="~/Scripts/fontawesome/all.min.js"></script>
    <link href="~/Content/jquery.datetimepicker.css" rel="stylesheet" />

    <script src="~/Scripts/jquery.datetimepicker.js"></script>

    <link href="~/Content/DataTables/css/dataTables.bootstrap4.css" rel="stylesheet" />

    <script src="~/Scripts/DataTables/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/DataTables/dataTables.bootstrap4.min.js"></script>
    <link href="~/Content/css/SideNavBar.css" rel="stylesheet" />
    <link href="~/Content/css/ChatBox.css" rel="stylesheet" />


    <link href="~/Content/css/editor.css" rel="stylesheet" />
    <script src="~/Scripts/editor.js"></script>
    <link href="~/Content/css/DashboardStyle.css" rel="stylesheet" />
    <link href="~/Content/css/Loader.css" rel="stylesheet" />
    <style>
        .bd-placeholder-img {
            font-size: 1.125rem;
            text-anchor: middle;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

        @@media (min-width: 768px) {
            .bd-placeholder-img-lg {
                font-size: 3.5rem;
            }
        }

        body {
            padding-top: 5rem;
        }
        /*Custom styles for this page */
        .starter-template {
            padding: 3rem 1.5rem;
            text-align: center;
        }
    </style>

</head>
<body class="bg-light">
    <div class="containerloader d-none" >

        <svg class="loader" viewBox="0 0 340 340">
            <circle cx="170" cy="170" r="160" stroke="#E2007C" />
            <circle cx="170" cy="170" r="135" stroke="#404041" />
            <circle cx="170" cy="170" r="110" stroke="#E2007C" />
            <circle cx="170" cy="170" r="85" stroke="#404041" />
        </svg>
    </div>

    <div class="container-fluid">
        <nav class="shadow navbar navbar-expand-md navbar-dark fixed-top bg-custom-1">
            <a class="navbar-brand" href="#"><img src="~/Content/img/Icon_Design_trans_white.png" class="d-inline-block align-top" alt="" style="max-height:35px;"></a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarsExampleDefault" aria-controls="navbarsExampleDefault" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarsExampleDefault">
                <ul class="navbar-nav mr-auto">
                    @*<li class="nav-item active">
                            @Html.ActionLink("Home", "Index", "Home", null, new { @class = "nav-link" })
                        </li>
                        <li class="nav-item">
                            @Html.ActionLink("Operator", "Index", "Operator", null, new { @class = "nav-link" })
                        </li>
                        <li class="nav-item">
                            @Html.ActionLink("DGH", "Index", "DGH", null, new { @class = "nav-link" })
                        </li>
                        <li class="nav-item">
                            @Html.ActionLink("ER Committee", "Index", "ERCommittee", null, new { @class = "nav-link" })
                        </li>

                        <li class="nav-item">
                            @Html.ActionLink("Account", "Register", "Account", null, new { @class = "nav-link" })
                        </li>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="dropdown01" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Dropdown</a>
                            <div class="dropdown-menu" aria-labelledby="dropdown01">
                                <a class="dropdown-item" href="#">Action</a>
                                <a class="dropdown-item" href="#">Another action</a>
                                <a class="dropdown-item" href="#">Something else here</a>
                            </div>
                        </li>*@
                </ul>
                @*<form class="form-inline my-2 my-lg-0">
                        <input class="form-control mr-sm-2" type="text" placeholder="Search" aria-label="Search">
                        <button class="btn btn-secondary my-2 my-sm-0" type="submit">Search</button>
                    </form>*@
                @using (Html.BeginForm("LogOff", "Account", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <input type="submit" class="btn btn-info ml-2" id="LogOff" value="LogOff" />
                }
            </div>
        </nav>

        <div class="page-wrapper chiller-theme toggled">
            <a id="show-sidebar" class="btn btn-sm  " style="background-color:#212529;" href="#">
                <i class="fas fa-bars text-light"></i>
            </a>
            @Html.Partial("SideNavBar")

            <main class="page-content">
                <div class="container-fluid">

                    @RenderBody()
                </div>

            </main>
        </div>
    </div>
    @RenderSection("scripts", required: false)

    <!-- Modal -->
    <div class="modal fade" id="formModal" tabindex="-1" role="dialog" aria-labelledby="formModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="formModalLabel">Modal title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="modalContent">
                    ...
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary btnclose " data-dismiss="modal"><i class="fas fa-times"></i> Close</button>
                    <button type="submit" form="myForm" class="btn btn-success" id="saveButton"><i class="fas fa-save"></i> Save</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal  fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content ">
                <div class="modal-header alert-info">
                    <h5 class="modal-title" id="exampleModalLongTitle">Alert</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="modalContentAlert">
                    ...
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal"><i class="fas fa-check"></i> Ok</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="CommentModal" role="dialog" aria-labelledby="CommentModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg  modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="CommentModalLabel">Add Comments</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="modalContentComment">
                </div>
                <div class="modal-footer">
                    <p class="text-danger h5 ErrorComment"></p>
                    <button type="submit" class="btn btn-primary" style="display:none" id="btnCommentSave"><i class="fas fa-save"></i> Save</button>
                </div>
            </div>
        </div>

    </div>
    <button type="button" class="btn btn-primary" style="display:none" id="btnalertmodal" data-toggle="modal" data-target="#exampleModalCenter"></button>
    <button type="button" style="display:none" id="btnCommentViewModal" class="btn btn-primary" data-toggle="modal" data-target="#formDetailModal" data-page="Comment" data-title="View Comment"></button>
    @*<button type="button" style="display:none" id="opertor1" class="btn btn-primary" data-toggle="modal" data-target="#formModal" data-page="ERScreeningDetail" data-title="ERScreening Detail"></button>*@



</body>
</html>

<script type="text/javascript">
    $(document).ready(()=> {

        $(".datetimetext").datetimepicker({
             format:'Y/m/d',
              timepicker:false
        });
        $(".sidebar-dropdown > a").click(function () {
            $(".sidebar-submenu").slideUp(200);
            if ($(this).parent().hasClass("active")) {
                $(".sidebar-dropdown").removeClass("active");
                $(this).parent().removeClass("active");
            }
            else {
                $(".sidebar-dropdown").removeClass("active");
                $(this).next(".sidebar-submenu").slideDown(200);
                $(this).parent().addClass("active");
            }
        });
        $("#close-sidebar").click(()=> {
            $(".page-wrapper").removeClass("toggled");
        });
        $("#show-sidebar").click(()=> {
            $(".page-wrapper").addClass("toggled");
        });
    });

    $(document).on('click', '.ViewComment', function (e) {
        e.preventDefault();
        var comText = $(this).attr('commenttext');
        var comType = $(this).attr('commentType');
        var comdate = $(this).attr('commentdate');
        $('#formModalLabelView').html('View Comment');
        $('#modalContentView').html('<div class=row><div class="col-lg-6 text-success font-weight-bold">Type : ' + comType + ' </div><div class="col-lg-6 text-success font-weight-bold">Date : ' + comdate + ' </div><div class="col-sm-12 mt-3 border-top "><h6 class="text-info">Comment :</h6> <p class="mt-3">' + comText + '</p></div></div>');
        $('#btnCommentViewModal').click();
    });

    $(document).on("click", ".GeneratePDF", function(e){
        e.preventDefault();
        let cssfile = "";
        cssfile = "/Content/css/PrintingData.css";
        $(".container-fluid").printThis({
            importCSS: true,
            importStyle: true,
            printContainer: false,
            copyTagClasses: true,
            pageTitle: "",
            loadCSS: cssfile
        });
    });

    const statusERROR = "ERROR";
    const statusNoCommentRec = "NCR";
    $('#btnCommentSave').click(() => {
        let form = $('#modalContentComment').find('form');
        let formUrl = form.attr('action');

        let DataText = $('#modalContentComment').find('#Comment_Text').val();
        let msg = 'Something Went Wrong. Try Again.';       
       
        if (DataText.length > 0) {
            msg = 'Something Went Wrong. Try Again.';
            $.ajax({
                url: formUrl,
                type: 'POST',
                data: form.serialize(),
                async: false,
                success: (result) => {
                    console.log(result);
                    switch (result) {
                        case statusERROR:
                            $('.ErrorComment').text(msg);
                            break;
                        case "Query Reply Successfully":
                            $('.Querycommenttablink').click();
                            break;
                        case statusNoCommentRec:
                            $('.ErrorComment').text("There Have No Comment Recieved To Resolve");
                            break;
                        default:
                            $('#modalContentComment').html(result);
                            if ($("#btnCommentSave").is(":visible")) {
                                $('#btnCommentSave').fadeOut();
                            }
                            window.location.reload(); 
                            break;
                    }
                },
                error: (result) => {

                    $('#modalContentComment').html(result);
                },
                fail: (xhr, textStatus, errorThrown) => {
                    $('#modalContentComment').html('<div class="alert alert-danger" role="alert">Request Failed with error: ' + errorThrown + '</div > ');

                }
            });
        }
        else {            
            msg = 'Text Field Not Empty. Enter Some Text To Save';
            $('.ErrorComment').text(msg);
            return false;
        }
    });

    $(document).on('click', '.UploadFile', (e)=> {
        e.preventDefault();
        let DatasetAttrVal = e.currentTarget.dataset;
        let refid = DatasetAttrVal.filerefid;
        let divid = DatasetAttrVal.divid;
        let inputfile = DatasetAttrVal.inputfile;
        let data = new FormData();
        data.append("file", $(inputfile).get(0).files[0]);
        data.append("RefId", refid);

        $.ajax({
            url: "@Url.Action("LoadUploadFile","Comment")",
            type: 'POST',
            data: data,
            contentType: false,
            processData: false,
            success: (result) => {
                if (result == "File upload Success") {
                    $("input[type='file']").val("");
                    GetUploadFilesData("#" + divid, refid);
                }
            },
            error: () => {
                alert("Something Went Wrong. Try Again");
            },
            fail: (xhr, textStatus, errorThrown) => {
            }
        });
    });

    $(document).on("click", '.fileDelete', (e)=> {
        e.preventDefault();
        let DatasetAttrVal = e.currentTarget.dataset;
        let divId = DatasetAttrVal.divid;
        let fileid = DatasetAttrVal.fileid;
        let refid = DatasetAttrVal.fileref;
        let sendData = { FileId: fileid };
        $.ajax({
            type: 'POST',
            contentType: 'application/json; charset=utf-8',
            url: '@Url.Action("RemoveUploadFile", "Comment")',
            data: JSON.stringify(sendData),
            datatype: 'json',
            async: false,
            success: (data) =>{
               // alertModal(data);
                GetUploadFilesData(divId, refid);
            },
            error: ()=> {
                alertModal("Something Went Wrong. Try Again");
            },
        });

    });

    const alertModal = (msg) => {
        $('#btnalertmodal').click();
        $('#modalContentAlert').html("<strong>" + msg + "</strong>");
    }

    const GetUploadFilesData = (divId, refid)=> {
        $(divId).html("No files attached");
            let sendData = { RefId:refid };
            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                url: '@Url.Action("GetUploadFiles", "Comment")',
                data: JSON.stringify(sendData),
                datatype: 'json',
                success: (data)=> {
                    if (data) {
                        console.log(data);
                        let txt = "";
                        if (data.length > 0) {
                            for (let file of data) {
                                txt += `<div class='badge badge-warning mr-2 mb-2'><a class='text-dark' href='@Url.Content("~/Content/UploadedFiles/") 
                                    ${file.FileName}' target='_blank'>${file.FileName}</a><a class='fileDelete small text-danger'
                                    data-fileid='${file.Id}' data-fileref='${file.FIleRef}' data-divid ='${divId}'  href='#'><i class='ml-1 fa fa-times'></i></a></div>`;
                            }
                            $(divId).html(txt);
                            $(divId).fadeIn("slow");
                        }
                    }
                },
                 error: ()=> {
                    alertModal( "Something Went Wrong. Try Again");
                },
            })
    }
    const ShowCommentModal = (appid, title, urlpath,targetpage,queryid)=> {
        $('#modalContentComment').empty();
        let senddata = { appid: appid, targetPage : targetpage,queryId: queryid };
        $.ajax({
            url: urlpath,
            data: senddata,
            async:false,
            success: (result)=> {
                console.log(result);
                $('#CommentModalLabel').text(title);
                $('#modalContentComment').html(result);
               if ($("#btnCommentSave").is(":hidden")) {
                        $('#btnCommentSave').show();
                }
              //  editor('#modalContentComment textarea');
            },
            error: ()=> {
                $('#modalContentComment').html('<div class="alert alert-danger" role="alert"> An Error has occured </div >');

            },
            fail: (xhr, textStatus, errorThrown)=> {
                $('#modalContentComment').html('<div class="alert alert-danger" role="alert">Request Failed with error: ' + errorThrown + '</div > ');

            }
        });

    }
    const ToChangeDateFormate= (value)=> {
        let pattern = /Date\(([^)]+)\)/;
        let results = pattern.exec(value);
        let dt = new Date(parseFloat(results[1]));

        return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear() + " " + dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds();
    }


    const editor =(textareaid)=> {
        $(textareaid).Editor({

            "insert_img": false,
            "insert_link": false,
            "togglescreen": false,
            "source": false
        });

    }
    $(document).ajaxStart(()=> {
        $(".containerloader").removeClass('d-none');
        console.log('loaderstart');
    });
    $(document).ajaxComplete(()=> {
        $(".containerloader").addClass('d-none');
        console.log('loadercomplete');
    });
</script>