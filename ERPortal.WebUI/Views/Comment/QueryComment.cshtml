@model ERPortal.Core.ViewModels.QueryCommentViewModel
@{
    Layout = null;
}


@using (Ajax.BeginForm("QueryCommentSubmit", "Comment", new { appid = ViewBag.appid }, new AjaxOptions
{
    HttpMethod = "POST",
    OnSuccess = "OnSuccessComment(data)",
    OnFailure = "OnFailureComment(data)",
    //LoadingElementId = "progress"
}, new { @id = "myQueryCommentForm" }))
{
    @Html.HiddenFor(model => model.QueryDetails.FileRefId)

    @*@using (Html.BeginForm("CommentSubmit", "Comment", new { appid = Model.ERApplicationId, FileRef = ViewBag.RefId }, FormMethod.Post, new { @id = "myCommentForm" }))
        {*@
    @Html.AntiForgeryToken()
    @*<div class="form-group row">
        @Html.LabelFor(model => model.QueryStatus, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
        <div class="col-sm-6 d-flex align-items-center">
            @Html.EnumDropDownListFor(model => model.QueryStatus, "Choose...", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.QueryStatus, "", new { @class = "text-danger" })
        </div>
    </div>*@
    <div class="form-group row ReciverIdSelectList">
        @Html.LabelFor(model => model.ReciverIdSelectList, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
        <div class="col-sm-6 d-flex align-items-center">
            @Html.DropDownListFor(model => model.ReciverIdSelectList, new SelectList(ViewBag.ReciverList, "ListItemKey", "ListItemValue"), "Select Forward To", new { @class = "form-control"})
            @Html.ValidationMessageFor(model => model.ReciverIdSelectList, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
            @Html.LabelFor(model => model.QueryMaster.Subject, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
            <div class="col-sm-9 d-flex align-items-center">
                @Html.EditorFor(model => model.QueryMaster.Subject, new { htmlAttributes = new { @class = "form-control " } })
                @Html.ValidationMessageFor(model => model.QueryMaster.Subject, "", new { @class = "text-danger" })
            </div>
        </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.Comment.Text, htmlAttributes: new { @class = "col-sm-3 col-form-label" })
        <div class="col-sm-9 d-flex align-items-center">
            @Html.TextAreaFor(model => model.Comment.Text, new { htmlAttributes = new { @class = "form-control" }, @rows = 10, @cols = 120 })
            @Html.ValidationMessageFor(model => model.Comment.Text, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row" id="FileDiv">
        <div class="col-lg-12">
            <h6>ER Screening Report Documents</h6>
        </div>
        <div class="col-lg-6">
            <div class="form-check form-check-inline">
                @Html.TextBox("file", "", new { type = "file", id = "txtFile" })
                <button type="button" value="Upload" class="btn btn-sm btn-primary UploadFile" filerefid="@Model.QueryDetails.FileRefId" divid="UploadFilesData" inputfile="txtFile" style="z-index:99999999"><i class="fas fa-upload"></i> Upload</button>
                @*<input type="button" value="Upload" class="btn btn-sm btn-primary UploadFile" filerefid="@ViewBag.RefId" divid="UploadFilesData" inputfile="txtFile" style="z-index:99999999" />*@
            </div>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-lg-12 mt-3">
            <div id="UploadFilesData" style="display:none;border:dashed; border-color:brown">
                File Not Found
            </div>
        </div>
    </div>
    //}
}
@*<script>
    $(document).ready(function () {

          editor("#Comment_Text");
    });
    
</script>*@
